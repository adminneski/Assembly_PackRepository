 -- "1070" Criando campo [RFC_ID_OLD] pra receber IDs do campo [RFC_ID] PARA GUARDAR OS IDs ANTIGOS 
 IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS 
 WHERE COLUMNS.TABLE_NAME = 'RFC_00_04'
 AND COLUMNS.COLUMN_NAME = 'RFC_ID_OLD')
 BEGIN 
 ALTER TABLE dbo.RFC_00_04
 ADD RFC_ID_OLD int NULL 
 END; 
 GO 
  
 -- "MOTHER" Guarda [RFC_ID] de relação com o cabeçalho no novo [RFC_ID_OLD] bkp 
 UPDATE RFC_00_04
 SET    RFC_ID_OLD = RFC_ID
 WHERE  RFC_ID_OLD IS NULL 
 GO 
 
 -- Atualiza novos ids da mãe [RFC_00] campo [RFC_ID], na table filha [RFC_00_04] campo [RFC_ID]
 UPDATE RFC_00_04 -- FILHA
 SET RFC_00_04.RFC_ID = T2.RFC_ID -- FILHA  RECEBE DA MÃE
 FROM RFC_00_04 -- FILHA
 INNER JOIN RFC_00 T2 ON (RFC_00_04.RFC_ID_OLD = T2.RFC_ID_OLD)
 AND (RFC_00_04.COM_CODIGO    = T2.COM_CODIGO)  --RELACIONA FILHA COM MAE
 GO
  
 -- Recria índice Primary Key da table  [RFC_00_04] para o campo [RFC_ID] 
 IF EXISTS ( SELECT count(table_name) 
    FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
    WHERE table_name = 'RFC_00_04'
    HAVING COUNT(*) > 1 ) 
 BEGIN
 -- DESABILITA INDICE 
 ALTER INDEX ALL ON [RFC_00_04]
 DISABLE 
  
 -- VERIFICA SE EXISTE O INDICE E O APAGA 
 IF  EXISTS (SELECT * 
             FROM sys.indexes AS si 
             WHERE si.name = 'RFC_00_04_pk')
             ALTER TABLE dbo.RFC_00_04
             DROP CONSTRAINT RFC_00_04_pk 
  
 -- ALTERA A TABLE CRIANDO O INDICE 
 ALTER TABLE dbo.RFC_00_04
 ADD CONSTRAINT RFC_00_04_pk 
 PRIMARY KEY CLUSTERED (RFC_ID) 
 WITH ( 
   PAD_INDEX = OFF, 
   FILLFACTOR = 90, 
   IGNORE_DUP_KEY = OFF, 
   STATISTICS_NORECOMPUTE = OFF, 
   ALLOW_ROW_LOCKS = ON, 
   ALLOW_PAGE_LOCKS = ON) 
 ON [PRIMARY] 
  
 -- REABILITA INDICES 
 ALTER INDEX ALL ON [RFC_00_04] 
 REBUILD 
 END
 GO