 -- Cria o SEQUENCE para o campo [CRB_01_ID] da table [CRB_00_01]
 IF NOT EXISTS( SELECT * FROM SYS.OBJECTS WHERE TYPE = 'SO'AND OBJECT_ID = OBJECT_ID(N'SEQ_CRB_01_ID'))
  CREATE SEQUENCE dbo.SEQ_CRB_01_ID
  AS int
  START WITH 1
  NO MINVALUE
  NO MAXVALUE
  NO CYCLE
  CACHE
  GO

 -- Criando campo [CRB_01_ID_OLD] pra receber IDs do campo [CRB_01_ID] PARA GUARDAR OS IDs ANTIGOS
 IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE COLUMNS.TABLE_NAME = 'CRB_00_01'
 AND COLUMNS.COLUMN_NAME = 'CRB_01_ID_OLD')
 BEGIN
 ALTER TABLE dbo.CRB_00_01
 ADD CRB_01_ID_OLD int NULL
 END
 GO

 -- Criando campo [CRB_ID_OLD] pra receber IDs do campo [CRB_ID] PARA GUARDAR OS IDs ANTIGOS
 IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE COLUMNS.TABLE_NAME = 'CRB_00_01'
 AND COLUMNS.COLUMN_NAME = 'CRB_ID_OLD')
 BEGIN
 ALTER TABLE dbo.CRB_00_01
 ADD CRB_ID_OLD int NULL
 END
 GO

 -- Guarda [CRB_01_ID] de relação com o cabeçalho no novo [CRB_01_ID_OLD] bkp
 UPDATE CRB_00_01
 SET    CRB_01_ID_OLD = CRB_01_ID,
 CRB_ID_OLD = CRB_ID
 WHERE  CRB_01_ID_OLD IS NULL
 GO
 
 -- Executa o SEQ_CRB_01_ID pra gerar os novos IDs do campo [CRB_01_ID]
 UPDATE CRB_00_01
 SET    CRB_01_ID = NEXT VALUE FOR SEQ_CRB_01_ID
 GO

 -- Recria índice Primary Key da table  [CRB_01_ID] para o campo [CRB_01_ID]
 IF EXISTS ( SELECT count(table_name)
    FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
    WHERE table_name = 'CRB_00_01'
    HAVING COUNT(*) > 1 )
 BEGIN
 -- DESABILITA INDICE
 ALTER INDEX ALL ON [CRB_00_01]
 DISABLE

 -- VERIFICA SE EXISTE O INDICE E O APAGA
 IF  EXISTS (SELECT *
             FROM sys.indexes AS si
             WHERE si.name = 'CRB_00_01_PK')
             ALTER TABLE dbo.CRB_00_01
             DROP CONSTRAINT CRB_00_01_pk

 -- ALTERA A TABLE CRIANDO O INDICE
 ALTER TABLE dbo.CRB_00_01
 ADD CONSTRAINT CRB_00_01_pk
 PRIMARY KEY CLUSTERED (CRB_01_ID)
 WITH (
   PAD_INDEX = OFF,
   FILLFACTOR = 90,
   IGNORE_DUP_KEY = OFF,
   STATISTICS_NORECOMPUTE = OFF,
   ALLOW_ROW_LOCKS = ON,
   ALLOW_PAGE_LOCKS = ON)
 ON [PRIMARY]

 -- REABILITA INDICES
 ALTER INDEX ALL ON [CRB_00_01]
 REBUILD
 END
 GO

-- Atualiza novos ids da mãe [CRB_00] campo [CRB_ID], na table filha [CRB_00_01] campo [CRB_01_ID]
 UPDATE CRB_00_01 -- FILHA
 SET CRB_00_01.CRB_ID = T2.CRB_ID -- FILHA  RECEBE DA MÃE
 FROM CRB_00_01 -- FILHA
 INNER JOIN CRB_00 T2 ON (CRB_00_01.CRB_ID_OLD = T2.CRB_ID_OLD)
 AND (CRB_00_01.COM_CODIGO    = T2.COM_CODIGO)  --RELACIONA FILHA COM MAE
 GO